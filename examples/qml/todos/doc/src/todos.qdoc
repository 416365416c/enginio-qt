/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \title Enginio QML Examples - Todos
    \example todos
    \brief The Todo example shows the EnginioModel usage in Qt Quick
    \ingroup enginio-examples
    \inmodule enginio-qml

    In this example a simple list of objects is displayed in a ListView.
    Each item in the list is a "To Do" object which can be "done" or "not yet done".
    Todos can be added and removed (when hovering

    The example uses Qt Quick Controls, Layouts and Enginio
    \snippet todos/todo.qml imports

    The first step is to create a \l{EnginioModelQml}{EnginioModel} and
    the Enginio instance with the backend configuration.

    \snippet todos/todo.qml model

    A ListView is used to display the list of Todos, in the delegate the
    properties of the Enginio objects are used.
    \snippet todos/todo.qml view

    It is easy to add a new object to the model.
    By using a TextField's onAccepted function the data is
    appended to the model.
    \snippet todos/todo.qml append
*/
